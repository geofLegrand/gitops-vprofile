name: "Vprofile-IAC"

on:
  
  push:
    branches:
      - main
      - stage
    paths:
      - terraform/**
  pull_request: 
    branches: 
      - main
    paths:
      - terraform/**
env:
 AWS_ACCESS_KEY_ID : ${{secrets.AWS_ACCESS_KEY_ID}}
 AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
 BUCKET_TF_STATE: ${{secrets.BUCKET_TF_STATE}}
 AWS_REGION: us-east-1
 EKS_CLUSTER: vprofile-eks

jobs:
  terraform:
    name: "Apply terraform code changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v1
            # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"
      
          # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check  
      - name: Terraform validate
        id: validate
        run: terraform validate

            # Generates an execution plan for Terraform
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out plan.out
        continue-on-error: true
      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1
       
